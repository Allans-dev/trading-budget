[{"/Users/allancheung/code/trading-budget/src/App.js":"1","/Users/allancheung/code/trading-budget/src/components/Landing.jsx":"2","/Users/allancheung/code/trading-budget/src/reportWebVitals.js":"3","/Users/allancheung/code/trading-budget/src/components/Header.jsx":"4","/Users/allancheung/code/trading-budget/src/index.js":"5","/Users/allancheung/code/trading-budget/src/components/Footer.jsx":"6","/Users/allancheung/code/trading-budget/src/components/stocksPage/Stocks.jsx":"7","/Users/allancheung/code/trading-budget/src/components/stocksPage/StocksView.jsx":"8","/Users/allancheung/code/trading-budget/src/components/stocksPage/StocksListItem.jsx":"9","/Users/allancheung/code/trading-budget/src/components/budgetPage/Budget.jsx":"10","/Users/allancheung/code/trading-budget/src/components/budgetPage/ExpenseItem.jsx":"11","/Users/allancheung/code/trading-budget/src/components/main-store.js":"12","/Users/allancheung/code/trading-budget/src/components/stocksPage/stocks-store.js":"13","/Users/allancheung/code/trading-budget/src/components/budgetPage/budget-store.js":"14","/Users/allancheung/code/trading-budget/src/components/budgetPage/BudgetView.jsx":"15"},{"size":4465,"mtime":1627354340754,"results":"16","hashOfConfig":"17"},{"size":245,"mtime":1627345004545,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1613642423048,"results":"19","hashOfConfig":"17"},{"size":1482,"mtime":1627353606726,"results":"20","hashOfConfig":"17"},{"size":500,"mtime":1613642423048,"results":"21","hashOfConfig":"17"},{"size":1066,"mtime":1627343969720,"results":"22","hashOfConfig":"17"},{"size":6138,"mtime":1627379671690,"results":"23","hashOfConfig":"17"},{"size":4279,"mtime":1627425465729,"results":"24","hashOfConfig":"17"},{"size":742,"mtime":1627426105161,"results":"25","hashOfConfig":"17"},{"size":6355,"mtime":1627099507813,"results":"26","hashOfConfig":"17"},{"size":849,"mtime":1627108853672,"results":"27","hashOfConfig":"17"},{"size":634,"mtime":1627259729371,"results":"28","hashOfConfig":"17"},{"size":1670,"mtime":1627378616867,"results":"29","hashOfConfig":"17"},{"size":1690,"mtime":1627098864076,"results":"30","hashOfConfig":"17"},{"size":5999,"mtime":1627345115614,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"13w5ty9",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/allancheung/code/trading-budget/src/App.js",[],["64","65"],"/Users/allancheung/code/trading-budget/src/components/Landing.jsx",[],"/Users/allancheung/code/trading-budget/src/reportWebVitals.js",[],"/Users/allancheung/code/trading-budget/src/components/Header.jsx",[],"/Users/allancheung/code/trading-budget/src/index.js",[],"/Users/allancheung/code/trading-budget/src/components/Footer.jsx",[],"/Users/allancheung/code/trading-budget/src/components/stocksPage/Stocks.jsx",["66"],"import React, { useContext, useEffect, useState, useCallback } from \"react\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport { store } from \"./stocks-store\";\n\nimport StocksView from \"./StocksView\";\n\nconst Stocks = () => {\n  const context = useContext(store);\n  const [yearCheck, setYearCheck] = useState(false);\n  // const [, updateState] = useState();\n  // const forceUpdate = useCallback(() => updateState({}), []);\n  // console.log(context);\n  const {\n    stocksList,\n    profitBE,\n    taxOwed,\n    taxBracket,\n    salary,\n    stockName,\n    sellPrice,\n    buyPrice,\n    volume,\n    showTotal,\n    totalIncome,\n  } = context.state;\n\n  const db = firebase.firestore();\n  const user = firebase.auth().currentUser;\n\n  const getStocks = async () => {\n    const listRef = db.collection(\"users\").doc(user.uid);\n    await listRef\n      .get()\n      .then((doc) => {\n        context.dispatch({\n          type: \"updateStocksList\",\n          payload: doc.data().stocksList,\n        });\n        context.dispatch({\n          type: \"updateProfitBE\",\n          payload: doc.data().profitBE,\n        });\n        context.dispatch({\n          type: \"updateTotalIncome\",\n          payload: doc.data().totalIncome,\n        });\n        context.dispatch({\n          type: \"updateTaxOwed\",\n          payload: doc.data().taxOwed,\n        });\n        context.dispatch({\n          type: \"updateYearCheck\",\n          payload: doc.data().yearCheck,\n        });\n        context.dispatch({\n          type: \"updateSalary\",\n          payload: doc.data().salary,\n        });\n        context.dispatch({\n          type: \"updateTaxBracket\",\n          payload: doc.data().taxBracket,\n        });\n        console.log(\"Document stocks:\", doc.data().stocksList);\n      })\n      .catch(() => {\n        console.log(\"No such document!\");\n      });\n  };\n\n  const saveStocks = async () => {\n    const totalsDocRef = db.collection(\"users\").doc(user.uid);\n    await totalsDocRef\n      .set(\n        {\n          profitBE,\n          taxOwed,\n          stocksList,\n          salary,\n          taxBracket,\n          totalIncome,\n        },\n        { merge: true }\n      )\n      .then(() => {\n        console.log(\"Document successfully written!\");\n      })\n      .catch((error) => {\n        console.error(\"Error writing document: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getStocks();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => () => saveStocks());\n\n  function oneYearCheck() {\n    yearCheck ? setYearCheck(false) : setYearCheck(true);\n  }\n\n  const deleteListItem = (id) => {\n    if (stocksList.length > 0) {\n      context.dispatch({\n        type: \"updateStocksList\",\n        payload: stocksList.filter((item, index) => {\n          return index + item.stockName !== id;\n        }),\n      });\n    }\n    saveStocks();\n    context.dispatch({ type: \"updateShowTotal\", payload: false });\n  };\n\n  const calcTaxBracket = (checkedIncome) => {\n    context.dispatch({\n      type: \"updateTaxBracket\",\n      payload:\n        checkedIncome > 180_001\n          ? 0.45\n          : checkedIncome > 120_001 && checkedIncome < 180_000\n          ? 0.37\n          : checkedIncome > 45_000 && checkedIncome < 120_000\n          ? 0.325\n          : checkedIncome > 18_201 && checkedIncome < 45_000\n          ? 0.19\n          : checkedIncome <= 18_200\n          ? 0\n          : 0,\n    });\n  };\n\n  const calcTaxOwed = (checkedIncome) => {\n    context.dispatch({\n      type: \"updateTaxOwed\",\n      payload:\n        checkedIncome > 180_001 && checkedIncome < 180_000\n          ? (checkedIncome - 180_000) * taxBracket + 51_667\n          : checkedIncome > 120_000 && checkedIncome < 120_000\n          ? (checkedIncome - 120_000) * taxBracket + 29_467\n          : checkedIncome > 45_000 && checkedIncome < 45_000\n          ? (checkedIncome - 45_000) * taxBracket + 5_092\n          : checkedIncome > 18_201\n          ? (checkedIncome - 18_201) * taxBracket\n          : checkedIncome <= 18_200\n          ? 0\n          : 0,\n    });\n  };\n\n  const addStocks = async (e) => {\n    e.preventDefault();\n\n    let calcIProfit = Number((sellPrice - buyPrice) * volume);\n    const payload = Array.isArray(stocksList)\n      ? [\n          ...stocksList,\n          {\n            stockName,\n            buyPrice,\n            sellPrice,\n            volume,\n            yearCheck,\n            iProfit: calcIProfit,\n          },\n        ]\n      : [\n          {\n            stockName,\n            buyPrice,\n            sellPrice,\n            volume,\n            yearCheck,\n            iProfit: calcIProfit,\n          },\n        ];\n\n    context.dispatch({\n      type: \"updateStocksList\",\n      payload,\n    });\n\n    context.dispatch({ type: \"updateStockName\", payload: \"\" });\n    context.dispatch({ type: \"updateBuyPrice\", payload: 0 });\n    context.dispatch({ type: \"updateSellPrice\", payload: 0 });\n    context.dispatch({ type: \"updateVolume\", payload: 0 });\n    setYearCheck(false);\n\n    document.getElementById(\"yearCheckBox\").checked = false;\n\n    context.dispatch({ type: \"updateShowTotal\", payload: false });\n  };\n\n  const calcTotal = () => {\n    let profitArray = stocksList.map((item) => {\n      return item.iProfit;\n    });\n\n    const stockTotal = profitArray.reduce((a, b) => a + b);\n\n    let totalIncome = yearCheck\n      ? stockTotal / 2 + Math.round(Number(salary))\n      : stockTotal + Math.round(Number(salary));\n    context.dispatch({\n      type: \"updateTotalIncome\",\n      payload: totalIncome,\n    });\n\n    return totalIncome;\n  };\n\n  const combine = () => {\n    const checkedIncome = calcTotal();\n\n    calcTaxBracket(checkedIncome);\n\n    calcTaxOwed(checkedIncome);\n\n    context.dispatch({\n      type: \"updateProfitBE\",\n      payload: checkedIncome - taxOwed,\n    });\n  };\n\n  const calculateProfit = (e) => {\n    e.preventDefault();\n    combine();\n    context.dispatch({\n      type: \"updateShowTotal\",\n      payload: showTotal ? false : true,\n    });\n  };\n\n  return (\n    <StocksView\n      calculateProfit={calculateProfit}\n      addStocks={addStocks}\n      oneYearCheck={oneYearCheck}\n      deleteListItem={deleteListItem}\n    />\n  );\n};\n\nexport default Stocks;\n","/Users/allancheung/code/trading-budget/src/components/stocksPage/StocksView.jsx",[],"/Users/allancheung/code/trading-budget/src/components/stocksPage/StocksListItem.jsx",[],"/Users/allancheung/code/trading-budget/src/components/budgetPage/Budget.jsx",[],"/Users/allancheung/code/trading-budget/src/components/budgetPage/ExpenseItem.jsx",[],"/Users/allancheung/code/trading-budget/src/components/main-store.js",[],"/Users/allancheung/code/trading-budget/src/components/stocksPage/stocks-store.js",[],"/Users/allancheung/code/trading-budget/src/components/budgetPage/budget-store.js",[],"/Users/allancheung/code/trading-budget/src/components/budgetPage/BudgetView.jsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":50,"nodeType":"73","messageId":"74","endLine":1,"endColumn":61},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]