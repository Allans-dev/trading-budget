[{"/Users/allancheung/code/trading-budget/src/reportWebVitals.js":"1","/Users/allancheung/code/trading-budget/src/index.js":"2","/Users/allancheung/code/trading-budget/src/components/Header/Header.jsx":"3","/Users/allancheung/code/trading-budget/src/components/Footer/Footer.jsx":"4","/Users/allancheung/code/trading-budget/src/main-store.js":"5","/Users/allancheung/code/trading-budget/src/components/Budget/budget-store.js":"6","/Users/allancheung/code/trading-budget/src/components/Stocks/stocks-store.js":"7","/Users/allancheung/code/trading-budget/src/components/Stocks/Stocks.jsx":"8","/Users/allancheung/code/trading-budget/src/components/Budget/Budget.jsx":"9","/Users/allancheung/code/trading-budget/src/components/Stocks/StocksView.jsx":"10","/Users/allancheung/code/trading-budget/src/components/Budget/BudgetView.jsx":"11","/Users/allancheung/code/trading-budget/src/components/Budget/ExpenseItem.jsx":"12","/Users/allancheung/code/trading-budget/src/components/Stocks/StocksListItem.jsx":"13","/Users/allancheung/code/trading-budget/src/components/PrivacyPolicy/PrivacyPolicy.jsx":"14","/Users/allancheung/code/trading-budget/src/components/Disclaimer/Disclaimer.jsx":"15","/Users/allancheung/code/trading-budget/src/components/Analysis/Analysis.jsx":"16","/Users/allancheung/code/trading-budget/src/components/Analysis/AnalysisView.jsx":"17","/Users/allancheung/code/trading-budget/src/components/Landing/Landing.jsx":"18","/Users/allancheung/code/trading-budget-v2/src/index.js":"19","/Users/allancheung/code/trading-budget-v2/src/App.js":"20","/Users/allancheung/code/trading-budget-v2/src/reportWebVitals.js":"21","/Users/allancheung/code/trading-budget-v2/src/main-store.js":"22","/Users/allancheung/code/trading-budget-v2/src/components/Stocks/stocks-store.js":"23","/Users/allancheung/code/trading-budget-v2/src/components/Budget/budget-store.js":"24","/Users/allancheung/code/trading-budget-v2/src/components/Budget/Budget.jsx":"25","/Users/allancheung/code/trading-budget-v2/src/components/Stocks/Stocks.jsx":"26","/Users/allancheung/code/trading-budget-v2/src/components/Landing/Landing.jsx":"27","/Users/allancheung/code/trading-budget-v2/src/components/Footer/Footer.jsx":"28","/Users/allancheung/code/trading-budget-v2/src/components/Header/Header.jsx":"29","/Users/allancheung/code/trading-budget-v2/src/components/PrivacyPolicy/PrivacyPolicy.jsx":"30","/Users/allancheung/code/trading-budget-v2/src/components/Analysis/Analysis.jsx":"31","/Users/allancheung/code/trading-budget-v2/src/components/Disclaimer/Disclaimer.jsx":"32","/Users/allancheung/code/trading-budget-v2/src/components/Stocks/StocksView.jsx":"33","/Users/allancheung/code/trading-budget-v2/src/components/Budget/BudgetView.jsx":"34","/Users/allancheung/code/trading-budget-v2/src/components/Analysis/AnalysisView.jsx":"35","/Users/allancheung/code/trading-budget-v2/src/components/Stocks/StocksListItem.jsx":"36","/Users/allancheung/code/trading-budget-v2/src/components/Budget/ExpenseItem.jsx":"37"},{"size":362,"mtime":1613642423048,"results":"38","hashOfConfig":"39"},{"size":500,"mtime":1613642423048,"results":"40","hashOfConfig":"39"},{"size":1156,"mtime":1629689850008,"results":"41","hashOfConfig":"39"},{"size":644,"mtime":1629274738837,"results":"42","hashOfConfig":"39"},{"size":634,"mtime":1627879020185,"results":"43","hashOfConfig":"39"},{"size":1960,"mtime":1628478010360,"results":"44","hashOfConfig":"39"},{"size":2029,"mtime":1628466436576,"results":"45","hashOfConfig":"39"},{"size":6644,"mtime":1629095689889,"results":"46","hashOfConfig":"39"},{"size":7224,"mtime":1629416476612,"results":"47","hashOfConfig":"39"},{"size":5051,"mtime":1629274831854,"results":"48","hashOfConfig":"39"},{"size":7054,"mtime":1629274710799,"results":"49","hashOfConfig":"39"},{"size":585,"mtime":1629274916819,"results":"50","hashOfConfig":"39"},{"size":1494,"mtime":1629274898191,"results":"51","hashOfConfig":"39"},{"size":6058,"mtime":1629274774241,"results":"52","hashOfConfig":"39"},{"size":1018,"mtime":1627708992905,"results":"53","hashOfConfig":"39"},{"size":5658,"mtime":1630121749290,"results":"54","hashOfConfig":"39"},{"size":2788,"mtime":1630124947480,"results":"55","hashOfConfig":"39"},{"size":428,"mtime":1629274760989,"results":"56","hashOfConfig":"39"},{"size":500,"mtime":1630129117000,"results":"57","hashOfConfig":"58"},{"size":6562,"mtime":1641160515236,"results":"59","hashOfConfig":"58"},{"size":362,"mtime":1630129117000,"results":"60","hashOfConfig":"58"},{"size":634,"mtime":1630129117000,"results":"61","hashOfConfig":"58"},{"size":3322,"mtime":1641083404697,"results":"62","hashOfConfig":"58"},{"size":2413,"mtime":1641037525713,"results":"63","hashOfConfig":"58"},{"size":7247,"mtime":1641097191037,"results":"64","hashOfConfig":"58"},{"size":6924,"mtime":1641085151753,"results":"65","hashOfConfig":"58"},{"size":1542,"mtime":1641100141946,"results":"66","hashOfConfig":"58"},{"size":854,"mtime":1641161434827,"results":"67","hashOfConfig":"58"},{"size":1242,"mtime":1641106158655,"results":"68","hashOfConfig":"58"},{"size":6066,"mtime":1641022782951,"results":"69","hashOfConfig":"58"},{"size":5612,"mtime":1641023833743,"results":"70","hashOfConfig":"58"},{"size":1018,"mtime":1640386174440,"results":"71","hashOfConfig":"58"},{"size":5124,"mtime":1641083095549,"results":"72","hashOfConfig":"58"},{"size":7784,"mtime":1641097333084,"results":"73","hashOfConfig":"58"},{"size":2782,"mtime":1641034639118,"results":"74","hashOfConfig":"58"},{"size":1496,"mtime":1640935093964,"results":"75","hashOfConfig":"58"},{"size":585,"mtime":1641037995003,"results":"76","hashOfConfig":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"13w5ty9",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kegmhz",{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/allancheung/code/trading-budget/src/reportWebVitals.js",[],["156","157"],"/Users/allancheung/code/trading-budget/src/index.js",[],"/Users/allancheung/code/trading-budget/src/components/Header/Header.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Footer/Footer.jsx",[],"/Users/allancheung/code/trading-budget/src/main-store.js",[],"/Users/allancheung/code/trading-budget/src/components/Budget/budget-store.js",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/stocks-store.js",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/Stocks.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Budget/Budget.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/StocksView.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Budget/BudgetView.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Budget/ExpenseItem.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/StocksListItem.jsx",[],"/Users/allancheung/code/trading-budget/src/components/PrivacyPolicy/PrivacyPolicy.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Disclaimer/Disclaimer.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Analysis/Analysis.jsx",["158"],"/Users/allancheung/code/trading-budget/src/components/Analysis/AnalysisView.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Landing/Landing.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/index.js",[],"/Users/allancheung/code/trading-budget-v2/src/App.js",["159","160","161","162"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, matchPath } from \"react-router-dom\";\n\nimport Landing from \"./components/Landing/Landing\";\nimport Stocks from \"./components/Stocks/Stocks\";\nimport Budget from \"./components/Budget/Budget\";\nimport Analysis from \"./components/Analysis/Analysis\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport Header from \"./components/Header/Header\";\n\nimport RingLoader from \"react-spinners/RingLoader\";\n\nimport PrivacyPolicy from \"./components/PrivacyPolicy/PrivacyPolicy\";\nimport Disclaimer from \"./components/Disclaimer/Disclaimer\";\n\nimport { StateProvider } from \"./main-store\";\nimport { StockStateProvider } from \"./components/Stocks/stocks-store\";\nimport { BudgetStateProvider } from \"./components/Budget/budget-store\";\n\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC238mryUvNxq4lScBrGNHL9dAjjHHPs4Q\",\n  authDomain: \"tradingbudget.firebaseapp.com\",\n  projectId: \"tradingbudget\",\n  storageBucket: \"tradingbudget.appspot.com\",\n  messagingSenderId: \"480429604058\",\n  appId: \"1:480429604058:web:7806497078f4244bff39e3\",\n  measurementId: \"G-555NFL2FQE\",\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\n// const db = firebase.firestore();\n\nconst App = () => {\n  const [authStatus, setAuthStatus] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const ui =\n    firebaseui.auth.AuthUI.getInstance() ||\n    new firebaseui.auth.AuthUI(firebase.auth());\n\n  const policyMatch = matchPath(\"/logged-out-privacy-policy\", {\n    path: window.location.pathname,\n  });\n\n  const disclaimerMatch = matchPath(\"/logged-out-disclaimer\", {\n    path: window.location.pathname,\n  });\n\n  const stocksMatch = matchPath(\"/stocks\", {\n    path: window.location.pathname,\n  });\n  const budgetMatch = matchPath(\"/budget\", {\n    path: window.location.pathname,\n  });\n  const analysisMatch = matchPath(\"/analysis\", {\n    path: window.location.pathname,\n  });\n\n  console.log(policyMatch);\n\n  useEffect(() => {\n    if (\n      authStatus === false &&\n      isLoading === false\n      // &&\n      // policyMatch !== null &&\n      // disclaimerMatch !== null &&\n      // policyMatch.isExact === false &&\n      // disclaimerMatch.isExact === false\n      // &&\n      // (stocksMatch.isExact === true ||\n      //   budgetMatch.isExact === true ||\n      //   analysisMatch.isExact === true)\n    ) {\n      ui.start(\"#firebaseui-auth-container\", uiConfig);\n    } else ui.reset();\n    // eslint-disable-next-line\n  }, [authStatus, isLoading]);\n\n  const uiConfig = {\n    callbacks: {\n      signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n        // User successfully signed in.\n        // Return type determines whether we continue the redirect automatically\n        // or whether we leave that to developer to handle.\n        return true;\n      },\n      uiShown: function () {\n        // The widget is rendered.\n        // Hide the loader.\n      },\n    },\n    // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n    signInFlow: \"popup\",\n    signInSuccessUrl: \"/\",\n    signInOptions: [\n      // Leave the lines as is for the providers you want to offer your users.\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      // {\n      //   provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      //   signInMethod: firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD,\n      // },\n      // {\n      //   provider: firebase.auth.PhoneAuthProvider.PROVIDER_ID,\n      //   recaptchaParameters: {\n      //     type: \"image\", // 'audio'\n      //     size: \"normal\", // 'invisible' or 'compact'\n      //     badge: \"bottomleft\", //' bottomright' or 'inline' applies to invisible.\n      //   },\n      //   defaultCountry: \"AU\",\n      // },\n    ],\n    // Terms of service url.\n    tosUrl: \"/logged-out-disclaimer\",\n    // Privacy policy url.\n    privacyPolicyUrl: \"/logged-out-privacy-policy\",\n  };\n\n  const signInAnon = () => {\n    setIsLoading((prev) => true);\n    firebase\n      .auth()\n      .signInAnonymously()\n      .then(() => setIsLoading((prev) => false))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        throw new Error(errorCode + \": \" + errorMessage);\n        // ...\n      });\n  };\n\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      setAuthStatus(true);\n      setIsLoading((prev) => false);\n    } else if (!user) {\n      setAuthStatus(false);\n      setIsLoading((prev) => false);\n      // }\n    } else {\n      throw new Error(\"error\");\n    }\n  });\n\n  if (isLoading) {\n    return (\n      <article className=\"loader-background\">\n        <RingLoader color={\"#4e4e4e\"} loading={isLoading} size={100} />\n      </article>\n    );\n  }\n\n  return authStatus ? (\n    <StateProvider>\n      <article className=\"root\">\n        <Router>\n          <Header />\n\n          <Route exact path=\"/privacy-policy\">\n            <PrivacyPolicy />\n          </Route>\n\n          <Route exact path=\"/disclaimer\">\n            <Disclaimer />\n          </Route>\n\n          <Route exact path=\"/\">\n            <Landing />\n          </Route>\n\n          <StockStateProvider>\n            <BudgetStateProvider>\n              <Route exact path=\"/stocks\">\n                <Stocks />\n              </Route>\n              <Route exact path=\"/budget\">\n                <Budget />\n              </Route>\n              <Route exact path=\"/analysis\">\n                <Analysis />\n              </Route>\n            </BudgetStateProvider>\n          </StockStateProvider>\n\n          <Footer />\n        </Router>\n      </article>\n    </StateProvider>\n  ) : (\n    <article className=\"root\" id=\"login\">\n      <section\n        style={{\n          display:\n            policyMatch !== null && policyMatch.isExact === true\n              ? \"none\"\n              : \"block\",\n        }}\n      >\n        <button className=\"anon-sign-btn\" onClick={signInAnon}>\n          Guest Sign In\n        </button>\n      </section>\n      <Router>\n        <Route exact path=\"/logged-out-privacy-policy\">\n          <PrivacyPolicy />\n        </Route>\n\n        <Route exact path=\"/logged-out-disclaimer\">\n          <Disclaimer />\n        </Route>\n      </Router>\n    </article>\n  );\n};\n\nexport default App;\n","/Users/allancheung/code/trading-budget-v2/src/reportWebVitals.js",[],"/Users/allancheung/code/trading-budget-v2/src/main-store.js",[],"/Users/allancheung/code/trading-budget-v2/src/components/Stocks/stocks-store.js",[],"/Users/allancheung/code/trading-budget-v2/src/components/Budget/budget-store.js",[],"/Users/allancheung/code/trading-budget-v2/src/components/Budget/Budget.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Stocks/Stocks.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Landing/Landing.jsx",["163","164","165","166","167","168"],"import React from \"react\";\n\nimport Stocks from \"../Stocks/Stocks\";\nimport Budget from \"../Budget/Budget\";\nimport Analysis from \"../Analysis/Analysis\";\n\nimport { StateProvider } from \"../../main-store\";\nimport { StockStateProvider } from \"../Stocks/stocks-store\";\nimport { BudgetStateProvider } from \"../Budget/budget-store\";\n\nimport \"./landing_styles.css\";\n\nconst Landing = () => (\n  // {\n  //   return window.matchMedia(\"(max-width: 1200px)\").matches ? (\n  //     <Stocks />\n  //   ) : (\n  //     <article className=\"landing\">\n  //       <StateProvider>\n  //         <StockStateProvider>\n  //           <BudgetStateProvider>\n  //             <Stocks />\n  //             <Budget />\n  //             <Analysis />\n  //           </BudgetStateProvider>\n  //         </StockStateProvider>\n  //       </StateProvider>\n  //     </article>\n  //   );\n  // };\n  <article>\n    <section style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div>\n        <h1 style={{ width: \"100%\", textAlign: \"center\" }}>Trading Budget</h1>\n        <p>\n          Trading Budget is my finance app that records stock data from inputs\n          and saves to firebase database.{\" \"}\n        </p>\n        <p>\n          Please click \"save and calculate\" to persist to database and calculate\n          values between tabs.{\" \"}\n        </p>\n        <div style={{ textAlign: \"center\" }}>\n          <span>\n            <strong>Hello World! and Happy Trading :)</strong>\n          </span>\n        </div>\n      </div>\n    </section>\n  </article>\n);\nexport default Landing;\n","/Users/allancheung/code/trading-budget-v2/src/components/Footer/Footer.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Header/Header.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/PrivacyPolicy/PrivacyPolicy.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Analysis/Analysis.jsx",["169"],"import React, { useContext, useEffect } from \"react\";\n\nimport AnalysisView from \"./AnalysisView\";\n\nimport { store as stockStore } from \"../Stocks/stocks-store\";\nimport { store as budgetStore } from \"../Budget/budget-store\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst Analysis = () => {\n  const db = firebase.firestore();\n  const user = firebase.auth().currentUser;\n\n  const sContext = useContext(stockStore);\n  const bContext = useContext(budgetStore);\n\n  const { stocksList } = sContext.state;\n  const { expenseArray } = bContext.state;\n\n  const getAnalysisData = async () => {\n    const listRef = db.collection(\"users\").doc(user.uid);\n    await listRef\n      .get()\n      .then((doc) => {\n        sContext.dispatch({\n          type: \"updateStocksList\",\n          payload: stocksList ? stocksList : doc.data().stocksList,\n        });\n        bContext.dispatch({\n          type: \"updateExpenses\",\n          payload: expenseArray ? expenseArray : doc.data().expenseArray,\n        });\n        console.log(\"Document stocks:\", doc.data().stocksList);\n        console.log(\"Document Expenses:\", doc.data().expenseArray);\n      })\n      .catch(() => {\n        console.log(\"No such document!\");\n      });\n  };\n\n  useEffect(() => {\n    getAnalysisData();\n    // eslint-disable-next-line\n  }, []);\n\n  const sortedCost = expenseArray.sort((a, b) => {\n    var nameA = a.category.toUpperCase();\n    var nameB = b.category.toUpperCase();\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    return 0;\n  });\n\n  const categoryArray = sortedCost\n    .map((val, index) => {\n      const prev = index - 1 >= 0 ? index - 1 : 0;\n\n      return val.category !== sortedCost[prev].category || index === 0\n        ? val.category\n        : null;\n    })\n    .filter((val, index) => {\n      return val !== null;\n    });\n\n  const extractKeyValues = (keyList, masterList, keyNameOne, keyNameTwo) => {\n    const array = [];\n    keyList.forEach((val) => {\n      masterList.forEach((val2) => {\n        let temp = {};\n        if (val === val2[keyNameOne]) {\n          temp[val2[keyNameOne]] = val2[keyNameTwo];\n          array.push(temp);\n        }\n        temp = {};\n      });\n    });\n    return array;\n  };\n\n  const budgetKeyValues = extractKeyValues(\n    categoryArray,\n    sortedCost,\n    \"category\",\n    \"cost\"\n  );\n\n  const addValuesIntoObject = (arr) => {\n    let obj = {};\n    arr.forEach((list) => {\n      for (let [key, value] of Object.entries(list)) {\n        if (obj[key]) {\n          obj[key] += value;\n        } else obj[key] = value;\n      }\n    });\n    return obj;\n  };\n\n  const totalExpenseByCategory = addValuesIntoObject(budgetKeyValues);\n\n  const keyLabelToCoords = (obj) => {\n    const arr = [];\n    for (const key in obj) {\n      arr.push({ x: key, y: obj[key] });\n    }\n    return arr;\n  };\n\n  const keyValueToCoords = (obj) => {\n    const arr = [];\n    for (const key in obj) {\n      arr.push({ x: obj[key], y: obj[key] });\n    }\n    return arr;\n  };\n\n  //===============================================================\n\n  const budgetOuter = keyLabelToCoords(totalExpenseByCategory);\n\n  const budgetInner = keyValueToCoords(totalExpenseByCategory);\n\n  //===============================================================\n\n  const sortedStocks = stocksList.sort((a, b) => {\n    return b.iProfit - a.iProfit;\n  });\n\n  const StockNameArray = stocksList\n    .map((val, index) => {\n      const prev = index - 1 >= 0 ? index - 1 : 0;\n\n      return val.stockName !== stocksList[prev].stockName || index === 0\n        ? val.stockName\n        : null;\n    })\n    .filter((val) => {\n      return val !== null;\n    });\n\n  const stocksKeyValues = extractKeyValues(\n    StockNameArray,\n    stocksList,\n    \"stockName\",\n    \"iProfit\"\n  );\n\n  const addSelectedValuesIntoObject = (arr) => {\n    let obj = { profit: 0, loss: 0 };\n    arr.forEach((list) => {\n      for (let [key, value] of Object.entries(list)) {\n        if (value >= 0) {\n          obj.profit += value;\n        } else if (value < 0) {\n          obj.loss += value;\n        }\n      }\n    });\n\n    obj.loss *= -1;\n\n    if (obj.loss && obj.profit) {\n      return obj;\n    } else if (obj.loss && !obj.profit) {\n      obj = {};\n      obj.loss = 1;\n      return obj;\n    } else if (obj.profit && !obj.loss) {\n      obj = {};\n      obj.profit = 1;\n      return obj;\n    } else {\n      return {};\n    }\n  };\n\n  const nameProfitObject = addSelectedValuesIntoObject(stocksKeyValues);\n\n  //===============================================================\n\n  const stocksInner = keyLabelToCoords(nameProfitObject);\n\n  const stocksOuter =\n    sortedStocks.length > 0\n      ? sortedStocks.map((val, index) => {\n          return {\n            x: val.stockName,\n            y: val.iProfit >= 0 ? val.iProfit : val.iProfit * -1,\n            profit: val.iProfit >= 0 ? true : false,\n          };\n        })\n      : [];\n\n  //===============================================================\n\n  return stocksList.length < 1 && expenseArray.length < 1 ? (\n    <div\n      style={{\n        backgroundColor: \"rgba(26, 26, 26, 0.5)\",\n        width: \"300px\",\n        height: \"55px\",\n        margin: \"0 auto\",\n        color: \"#d6d6d6\",\n        textAlign: \"center\",\n        padding: \"15px\",\n        borderRadius: \"15px\",\n        alignSelf: \"center\",\n      }}\n    >\n      Please enter a stock or an expense to see it charted.\n    </div>\n  ) : (\n    <AnalysisView\n      stocksOuter={stocksOuter}\n      stocksInner={stocksInner}\n      budgetOuter={budgetOuter}\n      budgetInner={budgetInner}\n    />\n  );\n};\n\nexport default Analysis;\n","/Users/allancheung/code/trading-budget-v2/src/components/Disclaimer/Disclaimer.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Stocks/StocksView.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Budget/BudgetView.jsx",["170","171","172"],"import React, { useContext, useEffect, useState } from \"react\";\n\nimport { store } from \"./budget-store\";\n\nimport ExpenseItem from \"./ExpenseItem\";\n\nimport \"./budget_style.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst BudgetView = (props) => {\n  const context = useContext(store);\n  const {\n    // timeFrame,\n    profitBE,\n    category,\n    description,\n    cost,\n    savingsRate,\n    displayResults,\n    otherCategory,\n    totalSavings,\n    totalExpenses,\n    netProfit,\n    expenseArray,\n  } = context.state;\n\n  const { calcBudget, addExpenses, deleteListItem } = props;\n\n  // const db = firebase.firestore();\n  // const user = firebase.auth().currentUser;\n\n  // const [budget, setBudget] = useState([]);\n\n  // useEffect(() => {\n  //   fetchBudgetData();\n  // }, [expenseArray]);\n\n  // const fetchBudgetData = async () => {\n  //   const listRef = db.collection(\"users\").doc(user.uid);\n  //   await listRef\n  //     .get()\n  //     .then((doc) => {\n  //       if (doc) {\n  //         return doc.data().expenseArray\n  //           ? doc.data().expenseArray\n  //           : expenseArray;\n  //       }\n  //     })\n  //     .then((data) => setBudget(data))\n  //     .catch(() => {\n  //       console.log(\"No such document!\");\n  //     });\n  // };\n\n  return (\n    <article className=\"budget-page\">\n      <form>\n        <section className=\"add-expense\">\n          <label className=\"category\">\n            Category:{\" \"}\n            <select\n              required\n              id=\"category\"\n              className=\"category\"\n              value={category}\n              onChange={(e) => {\n                context.dispatch({\n                  type: \"updateCategory\",\n                  payload: e.target.value,\n                });\n              }}\n            >\n              <option value=\"Restaurant\">Restaurant</option>\n              <option value=\"Groceries\">Groceries</option>\n              <option value=\"Entertainment\">Entertainment</option>\n              <option value=\"Shopping\">Shopping</option>\n              <option value=\"Rent/Mortgage\">Rent/Mortgage</option>\n              <option value=\"Hobby\">Hobby</option>\n              <option value=\"Household\">Household</option>\n              <option value=\"Transport\">Transport</option>\n              <option value=\"Education\">Education</option>\n              <option value=\"Health\">Health</option>\n              <option value=\"Other\">Other</option>\n            </select>\n            {category !== \"Other\" ? null : (\n              <input\n                required\n                className=\"other\"\n                type=\"text\"\n                value={otherCategory}\n                onChange={(e) => {\n                  context.dispatch({\n                    type: \"updateOtherCategory\",\n                    payload: e.target.value,\n                  });\n                }}\n                maxLength=\"11\"\n              />\n            )}\n          </label>\n\n          <label className=\"description\">\n            Description:\n            <input\n              type=\"text\"\n              value={description}\n              onChange={(e) =>\n                context.dispatch({\n                  type: \"updateDescription\",\n                  payload: e.target.value,\n                })\n              }\n              maxLength=\"11\"\n            />\n          </label>\n          <label className=\"cost\">\n            Cost:{\" \"}\n            <input\n              required\n              type=\"number\"\n              value={cost}\n              onChange={(e) =>\n                context.dispatch({\n                  type: \"updateCost\",\n                  payload: Number(e.target.value),\n                })\n              }\n            />\n          </label>\n          <button className=\"add-button\" onClick={addExpenses}>\n            +\n          </button>\n        </section>\n\n        {/* <label>\n          Current timeframe:{\" \"}\n          <select\n            id=\"timeframe\"\n            style={styles.timeFrame}\n            value={timeFrame}\n            onChange={(e) => {\n              context.dispatch({\n                type: \"updateTimeFrame\",\n                payload: e.target.value,\n              });\n              context.dispatch({\n                type: \"updateDisplayResults\",\n                payload: false,\n              });\n            }}\n          >\n            <option value=\"day\">day</option>\n            <option value=\"week\">week</option>\n            <option value=\"fortnight\">fortnight</option>\n            <option value=\"month\">month</option>\n            <option value=\"year\">year</option>\n          </select>\n        </label> */}\n        <section className=\"savings\">\n          <label className=\"savings-label\">\n            <span style={{ display: \"block\" }}>Savings Rate:</span>\n            <input\n              id=\"savings-rate\"\n              type=\"range\"\n              min={0}\n              max={100}\n              value={savingsRate}\n              onChange={(e) => {\n                context.dispatch({\n                  type: \"updateSavingsRate\",\n                  payload: e.target.value,\n                });\n                context.dispatch({\n                  type: \"updateDisplayResults\",\n                  payload: false,\n                });\n              }}\n            ></input>\n            <div className=\"savings-rate\">{savingsRate}%</div>\n          </label>\n          <button className=\"green button\" onClick={calcBudget}>\n            {displayResults ? \"Show Expenses\" : \"Save and Calculate\"}\n          </button>\n        </section>\n      </form>\n\n      <section\n        className={expenseArray && expenseArray.length > 0 ? \"results\" : \"none\"}\n      >\n        {displayResults === true && netProfit > 0 ? (\n          <div className=\"summary\">\n            <span>Take-Home Income: </span>\n            <span>\n              {new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              }).format(Math.round(profitBE * 100) / 100)}\n            </span>\n            <span>Total Expenses:</span>\n            <span>\n              {\" \"}\n              {new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              }).format(Math.round(totalExpenses * 100) / 100)}\n            </span>\n            <span>Total Savings: </span>\n            <span>\n              {new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              }).format(Math.round(totalSavings * 100) / 100)}\n            </span>\n\n            {/* <span>{timeFrame} </span> */}\n            <span>Net Profit: </span>\n            <span>\n              {new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              }).format(Math.round(netProfit * 100) / 100)}\n            </span>\n            {/* {timeFrame} */}\n          </div>\n        ) : displayResults === true && totalExpenses > 0 ? (\n          <div className=\"expenses\">\n            <div>\n              Total Expenses:{\" \"}\n              {new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n              }).format(Math.round(totalExpenses * 100) / 100)}\n            </div>\n          </div>\n        ) : Array.isArray(expenseArray) ? (\n          <ul>\n            {expenseArray.map((item, index) => (\n              <ExpenseItem\n                key={index}\n                index={index}\n                category={item.category}\n                description={item.description}\n                cost={item.cost}\n                deleteListItem={deleteListItem}\n                otherCategory={otherCategory}\n              />\n            ))}\n          </ul>\n        ) : null}\n      </section>\n    </article>\n  );\n};\n\nexport default BudgetView;\n","/Users/allancheung/code/trading-budget-v2/src/components/Analysis/AnalysisView.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Stocks/StocksListItem.jsx",[],"/Users/allancheung/code/trading-budget-v2/src/components/Budget/ExpenseItem.jsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":159,"column":17,"nodeType":"179","messageId":"180","endLine":159,"endColumn":20},{"ruleId":"177","severity":1,"message":"181","line":59,"column":9,"nodeType":"179","messageId":"180","endLine":59,"endColumn":24},{"ruleId":"177","severity":1,"message":"182","line":63,"column":9,"nodeType":"179","messageId":"180","endLine":63,"endColumn":20},{"ruleId":"177","severity":1,"message":"183","line":66,"column":9,"nodeType":"179","messageId":"180","endLine":66,"endColumn":20},{"ruleId":"177","severity":1,"message":"184","line":69,"column":9,"nodeType":"179","messageId":"180","endLine":69,"endColumn":22},{"ruleId":"177","severity":1,"message":"185","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"177","severity":1,"message":"186","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"187","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":16},{"ruleId":"177","severity":1,"message":"188","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":23},{"ruleId":"177","severity":1,"message":"189","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":28},{"ruleId":"177","severity":1,"message":"190","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":29},{"ruleId":"177","severity":1,"message":"178","line":157,"column":17,"nodeType":"179","messageId":"180","endLine":157,"endColumn":20},{"ruleId":"177","severity":1,"message":"191","line":1,"column":29,"nodeType":"179","messageId":"180","endLine":1,"endColumn":38},{"ruleId":"177","severity":1,"message":"192","line":1,"column":40,"nodeType":"179","messageId":"180","endLine":1,"endColumn":48},{"ruleId":"177","severity":1,"message":"193","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":16},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'disclaimerMatch' is assigned a value but never used.","'stocksMatch' is assigned a value but never used.","'budgetMatch' is assigned a value but never used.","'analysisMatch' is assigned a value but never used.","'Stocks' is defined but never used.","'Budget' is defined but never used.","'Analysis' is defined but never used.","'StateProvider' is defined but never used.","'StockStateProvider' is defined but never used.","'BudgetStateProvider' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]