[{"/Users/allancheung/code/trading-budget/src/App.js":"1","/Users/allancheung/code/trading-budget/src/components/Landing.jsx":"2","/Users/allancheung/code/trading-budget/src/reportWebVitals.js":"3","/Users/allancheung/code/trading-budget/src/index.js":"4","/Users/allancheung/code/trading-budget/src/components/Header/Header.jsx":"5","/Users/allancheung/code/trading-budget/src/components/Footer/Footer.jsx":"6","/Users/allancheung/code/trading-budget/src/main-store.js":"7","/Users/allancheung/code/trading-budget/src/components/Budget/budget-store.js":"8","/Users/allancheung/code/trading-budget/src/components/Stocks/stocks-store.js":"9","/Users/allancheung/code/trading-budget/src/components/Stocks/Stocks.jsx":"10","/Users/allancheung/code/trading-budget/src/components/Budget/Budget.jsx":"11","/Users/allancheung/code/trading-budget/src/components/Stocks/StocksView.jsx":"12","/Users/allancheung/code/trading-budget/src/components/Budget/BudgetView.jsx":"13","/Users/allancheung/code/trading-budget/src/components/Budget/ExpenseItem.jsx":"14","/Users/allancheung/code/trading-budget/src/components/Stocks/StocksListItem.jsx":"15","/Users/allancheung/code/trading-budget/src/components/PrivacyPolicy/PrivacyPolicy.jsx":"16","/Users/allancheung/code/trading-budget/src/components/Disclaimer/Disclaimer.jsx":"17","/Users/allancheung/code/trading-budget/src/components/Analysis/Analysis.jsx":"18","/Users/allancheung/code/trading-budget/src/components/Analysis/AnalysisView.jsx":"19","/Users/allancheung/code/trading-budget/src/components/Analysis/analysis-store.js":"20"},{"size":5006,"mtime":1627968513865,"results":"21","hashOfConfig":"22"},{"size":245,"mtime":1627345004545,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1613642423048,"results":"24","hashOfConfig":"22"},{"size":500,"mtime":1613642423048,"results":"25","hashOfConfig":"22"},{"size":1094,"mtime":1627782833903,"results":"26","hashOfConfig":"22"},{"size":632,"mtime":1627695087782,"results":"27","hashOfConfig":"22"},{"size":634,"mtime":1627879020185,"results":"28","hashOfConfig":"22"},{"size":1787,"mtime":1627640376549,"results":"29","hashOfConfig":"22"},{"size":1744,"mtime":1627879465435,"results":"30","hashOfConfig":"22"},{"size":6300,"mtime":1627872523409,"results":"31","hashOfConfig":"22"},{"size":6995,"mtime":1627625466162,"results":"32","hashOfConfig":"22"},{"size":5008,"mtime":1627726908551,"results":"33","hashOfConfig":"22"},{"size":6963,"mtime":1627975847966,"results":"34","hashOfConfig":"22"},{"size":581,"mtime":1627631057392,"results":"35","hashOfConfig":"22"},{"size":1478,"mtime":1627630974780,"results":"36","hashOfConfig":"22"},{"size":6050,"mtime":1627707867872,"results":"37","hashOfConfig":"22"},{"size":1018,"mtime":1627708992905,"results":"38","hashOfConfig":"22"},{"size":4585,"mtime":1628197690148,"results":"39","hashOfConfig":"22"},{"size":2228,"mtime":1628198100516,"results":"40","hashOfConfig":"22"},{"size":840,"mtime":1627968405867,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13w5ty9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/allancheung/code/trading-budget/src/App.js",[],["85","86"],"/Users/allancheung/code/trading-budget/src/components/Landing.jsx",[],"/Users/allancheung/code/trading-budget/src/reportWebVitals.js",[],"/Users/allancheung/code/trading-budget/src/index.js",[],"/Users/allancheung/code/trading-budget/src/components/Header/Header.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Footer/Footer.jsx",[],"/Users/allancheung/code/trading-budget/src/main-store.js",[],"/Users/allancheung/code/trading-budget/src/components/Budget/budget-store.js",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/stocks-store.js",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/Stocks.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Budget/Budget.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/StocksView.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Budget/BudgetView.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Budget/ExpenseItem.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Stocks/StocksListItem.jsx",[],"/Users/allancheung/code/trading-budget/src/components/PrivacyPolicy/PrivacyPolicy.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Disclaimer/Disclaimer.jsx",[],"/Users/allancheung/code/trading-budget/src/components/Analysis/Analysis.jsx",["87","88","89"],"import React, { useContext, useEffect } from \"react\";\n\nimport AnalysisView from \"./AnalysisView\";\n\nimport { store } from \"./analysis-store\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst Analysis = () => {\n  const db = firebase.firestore();\n  const user = firebase.auth().currentUser;\n\n  const context = useContext(store);\n  const { stocksList, expenseArray } = context.state;\n\n  const getAnalysisData = async () => {\n    const listRef = db.collection(\"users\").doc(user.uid);\n    await listRef\n      .get()\n      .then((doc) => {\n        context.dispatch({\n          type: \"updateStocksList\",\n          payload: doc.data().stocksList,\n        });\n        context.dispatch({\n          type: \"updateExpenses\",\n          payload: doc.data().expenseArray,\n        });\n        console.log(\"Document stocks:\", doc.data().stocksList);\n      })\n      .catch(() => {\n        console.log(\"No such document!\");\n      });\n  };\n\n  useEffect(() => {\n    getAnalysisData();\n    // eslint-disable-next-line\n  }, []);\n\n  const sortedCost = expenseArray.sort((a, b) => {\n    var nameA = a.category.toUpperCase(); // ignore upper and lowercase\n    var nameB = b.category.toUpperCase(); // ignore upper and lowercase\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n\n    // names must be equal\n    return 0;\n  });\n\n  const categoryArray = sortedCost\n    .map((val, index) => {\n      const prev = index - 1 >= 0 ? index - 1 : 0;\n\n      return val.category !== sortedCost[prev].category || index === 0\n        ? val.category\n        : null;\n    })\n    .filter((val, index) => {\n      return val !== null;\n    });\n\n  const extractKeyValues = (keyList, masterList, keyNameOne, keyNameTwo) => {\n    const array = [];\n    keyList.map((val) => {\n      masterList.map((val2) => {\n        let temp = {};\n        if (val === val2[keyNameOne]) {\n          temp[val2[keyNameOne]] = val2[keyNameTwo];\n          array.push(temp);\n        }\n        temp = {};\n      });\n    });\n    return array;\n  };\n\n  const budgetKeyValues = extractKeyValues(\n    categoryArray,\n    sortedCost,\n    \"category\",\n    \"cost\"\n  );\n\n  const addValuesIntoObject = (arr) => {\n    let obj = {};\n    arr.forEach((list) => {\n      for (let [key, value] of Object.entries(list)) {\n        if (obj[key]) {\n          obj[key] += value;\n        } else obj[key] = value;\n      }\n    });\n    return obj;\n  };\n\n  const totalExpenseByCaterory = addValuesIntoObject(budgetKeyValues);\n\n  const keyValueToCoords = (obj) => {\n    const arr = [];\n    for (const key in obj) {\n      arr.push({ x: key, y: obj[key] });\n    }\n    return arr;\n  };\n\n  //===============================================================\n\n  const budgetInner = keyValueToCoords(totalExpenseByCaterory);\n\n  const budgetOuter =\n    sortedCost.length > 0\n      ? sortedCost.map((val, index) => {\n          return {\n            x: val.cost,\n            y: val.cost,\n          };\n        })\n      : 0;\n\n  //===============================================================\n\n  const sortedStocks = stocksList.sort((a, b) => {\n    return b.iProfit - a.iProfit;\n  });\n\n  const StockNameArray = stocksList\n    .map((val, index) => {\n      const prev = index - 1 >= 0 ? index - 1 : 0;\n\n      return val.stockName !== stocksList[prev].stockName || index === 0\n        ? val.stockName\n        : null;\n    })\n    .filter((val, index) => {\n      return val !== null;\n    });\n\n  const stocksKeyValues = extractKeyValues(\n    StockNameArray,\n    stocksList,\n    \"stockName\",\n    \"iProfit\"\n  );\n\n  const addSelectedValuesIntoObject = (arr) => {\n    let obj = { profit: 0, loss: 0 };\n    arr.forEach((list) => {\n      for (let [key, value] of Object.entries(list)) {\n        if (value >= 0) {\n          obj.profit += value;\n        } else obj.loss += value;\n      }\n    });\n    obj.loss *= -1;\n    return obj;\n  };\n\n  const nameProfitObject = addSelectedValuesIntoObject(stocksKeyValues);\n\n  //===============================================================\n\n  const stocksInner = keyValueToCoords(nameProfitObject);\n\n  const stocksOuter =\n    sortedStocks.length > 0\n      ? sortedStocks.map((val, index) => {\n          return {\n            x: val.stockName,\n            y: val.iProfit > 0 ? val.iProfit : val.iProfit * -1,\n          };\n        })\n      : 0;\n\n  //===============================================================\n\n  return (\n    <AnalysisView\n      stocksOuter={stocksOuter}\n      stocksInner={stocksInner}\n      budgetOuter={budgetOuter}\n      budgetInner={budgetInner}\n    />\n  );\n};\n\nexport default Analysis;\n","/Users/allancheung/code/trading-budget/src/components/Analysis/AnalysisView.jsx",["90"],"import React from \"react\";\n\nimport { VictoryPie } from \"victory\";\n\nimport \"./analysis_styles.css\";\n\nconst AnalysisView = (props) => {\n  const { stocksOuter, stocksInner, budgetInner, budgetOuter } = props;\n\n  console.log(stocksOuter);\n\n  console.log(stocksInner);\n\n  const colors = [\n    \"cornflowerblue\",\n    \"gold\",\n    \"orange\",\n    \"turquoise\",\n    \"tomato\",\n    \"greenyellow\",\n  ];\n\n  const theme = {\n    pie: {\n      style: {\n        data: {\n          padding: 10,\n          stroke: \"transparent\",\n          strokeWidth: 1,\n        },\n        // labels: assign({}, baseLabelStyles, { padding: 20 }),\n      },\n      colorScale: colors,\n      width: 400,\n      height: 400,\n      padding: 50,\n    },\n  };\n\n  return (\n    <div class=\"analysis-view\">\n      <svg width={380} height={380}>\n        <VictoryPie\n          radius={140}\n          standalone={false}\n          innerRadius={80}\n          data={stocksOuter}\n          labelRadius={({ innerRadius }) => innerRadius + 25}\n          colorScale={colors}\n        />\n        <VictoryPie\n          radius={60}\n          standalone={false}\n          data={stocksInner}\n          labelRadius={({ innerRadius }) => innerRadius + 25}\n          colorScale={colors}\n          style={{\n            data: {\n              fill: ({ datum }) => (datum.x === \"profit\" ? \"green\" : \"red\"),\n            },\n          }}\n        />\n      </svg>\n      <svg width={380} height={380}>\n        <VictoryPie\n          radius={140}\n          standalone={false}\n          innerRadius={80}\n          data={budgetOuter}\n          labelRadius={({ innerRadius }) => innerRadius + 25}\n          colorScale={colors}\n        />\n        <VictoryPie\n          radius={60}\n          standalone={false}\n          data={budgetInner}\n          labelRadius={({ innerRadius }) => innerRadius + 25}\n          colorScale={colors}\n\n          //   style={{\n          //     data: {\n          //       fillOpacity: 0.9,\n          //       stroke: \"#c43a31\",\n          //       strokeWidth: 3,\n          //     },\n          //     labels: {\n          //       fontSize: 25,\n          //       fill: \"#c43a31\",\n          //     },\n          //   }}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default AnalysisView;\n","/Users/allancheung/code/trading-budget/src/components/Analysis/analysis-store.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":70,"column":23,"nodeType":"97","messageId":"98","endLine":70,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":71,"column":29,"nodeType":"97","messageId":"98","endLine":71,"endColumn":31},{"ruleId":"99","severity":1,"message":"100","line":154,"column":17,"nodeType":"101","messageId":"102","endLine":154,"endColumn":20},{"ruleId":"99","severity":1,"message":"103","line":23,"column":9,"nodeType":"101","messageId":"102","endLine":23,"endColumn":14},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]